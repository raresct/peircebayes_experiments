0801.0131	cs.DB	Two-Level Concept-Oriented Data Model	In this paper we describe a new approach to data modelling called the concept-oriented model ( CoM ) . This model is based on the formalism of nested ordered sets which uses inclusion relation to produce hierarchical structure of sets and ordering relation to produce multi-dimensional structure among its elements . Nested ordered set is defined as an ordered set where an each element can be itself an ordered set . Ordering relation in CoM is used to define data semantics and operations with data such as projection and de-projection . This data model can be applied to very different problems and the paper describes some its uses such grouping with aggregation and multi-dimensional analysis .
0801.0133	cs.PL	An Approach to Programming Based on Concepts	In this paper we describe a new approach to programming which generalizes object-oriented programming . It is based on using a new programming construct , called concept , which generalizes classes . Concept is defined as a pair of two classes : one reference class and one object class . Each concept has a parent concept which is specified using inclusion relation generalizing inheritance . We describe several important mechanisms such as reference resolution , context stack , dual methods and life-cycle management , inheritance and polymorphism . This approach to programming is positioned as a new programming paradigm and therefore we formulate its main principles and rules .
0801.0135	cs.PL	Concepts and their Use for Modelling Objects and References in Programming Languages	In the paper a new programming construct , called concept , is introduced . Concept is pair of two classes : a reference class and an object class . Instances of the reference classes are passed-by-value and are intended to represent objects . Instances of the object class are passed-by-reference . An approach to programming where concepts are used instead of classes is called concept-oriented programming ( CoP ) . In CoP objects are represented and accessed indirectly by means of references . The structure of concepts describes a hierarchical space with a virtual address system . The paper describes this new approach to programming including such mechanisms as reference resolution , complex references , method interception , dual methods , life-cycle management inheritance and polymorphism .
0801.0136	cs.PL	Indirect Object Representation and Access by Means of Concepts	The paper describes a mechanism for indirect object representation and access ( ORA ) in programming languages . The mechanism is based on using a new programming construct which is referred to as concept . Concept consists of one object class and one reference class both having their fields and methods . The object class is the conventional class as defined in OOP with instances passed by reference . Instances of the reference class are passed by value and are intended to represent objects . The reference classes are used to describe how objects have to be represented and accessed by providing custom format for their identifiers and custom access procedures . Such an approach to programming where concepts are used instead of classes is referred to as concept-oriented programming . It generalizes OOP and its main advantage is that it allows the programmer to describe not only the functionality of target objects but also intermediate functions which are executed behind the scenes as an object is being accessed .
0801.0139	cs.DB	Principles of the Concept-Oriented Data Model	In the paper a new approach to data representation and manipulation is described , which is called the concept-oriented data model ( CODM ) . It is supposed that items represent data units , which are stored in concepts . A concept is a combination of superconcepts , which determine the concept's dimensionality or properties . An item is a combination of superitems taken by one from all the superconcepts . An item stores a combination of references to its superitems . The references implement inclusion relation or attribute-value relation among items . A concept-oriented database is defined by its concept structure called syntax or schema and its item structure called semantics . The model defines formal transformations of syntax and semantics including the canonical semantics where all concepts are merged and the data semantics is represented by one set of items . The concept-oriented data model treats relations as subconcepts where items are instances of the relations . Multi-valued attributes are defined via subconcepts as a view on the database semantics rather than as a built-in mechanism . The model includes concept-oriented query language , which is based on collection manipulations . It also has such mechanisms as aggregation and inference based on semantics propagation through the database schema .
