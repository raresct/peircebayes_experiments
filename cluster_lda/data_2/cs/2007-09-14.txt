0709.2201	cs.DM	A complete proof of The Graceful Tree Conjecture using the concept of Edge Degree	We show the Graceful Tree Conjecture holds .
0709.2225	cs.IT cs.SC cs.SD cs.SE math.IT	Improved Linear Parallel Interference Cancellers	In this paper , taking the view that a linear parallel interference canceller ( LPIC ) can be seen as a linear matrix filter , we propose new linear matrix filters that can result in improved bit error performance compared to other LPICs in the literature . The motivation for the proposed filters arises from the possibility of avoiding the generation of certain interference and noise terms in a given stage that would have been present in a conventional LPIC ( CLPIC ) . In the proposed filters , we achieve such avoidance of the generation of interference and noise terms in a given stage by simply making the diagonal elements of a certain matrix in that stage equal to zero . Hence , the proposed filters do not require additional complexity compared to the CLPIC , and they can allow achieving a certain error performance using fewer LPIC stages . We also extend the proposed matrix filter solutions to a multicarrier DS-CDMA system , where we consider two types of receivers . In one receiver ( referred to as Type-I receiver ) , LPIC is performed on each subcarrier first , followed by multicarrier combining ( MCC ) . In the other receiver ( called Type-II receiver ) , MCC is performed first , followed by LPIC . We show that in both Type-I and Type-II receivers , the proposed matrix filters outperform other matrix filters . Also , Type-II receiver performs better than Type-I receiver because of enhanced accuracy of the interference estimates achieved due to frequency diversity offered by MCC .
0709.2252	cs.NI	Otiy : Loactors tracking nodes	We propose Otiy , a node-centric location service that limits the impact of location updates generate by mobile nodes in IEEE802.11-based wireless mesh networks . Existing location services use node identifiers to determine the locator ( aka anchor ) that is responsible for keeping track of a node's location . Such a strategy can be inefficient because : ( i ) identifiers give no clue on the node 's mobility and ( ii ) locators can be far from the source/destination shortest path , which increases both location delays and bandwidth consumption . To solve these issues , Otiy introduces a new strategy that identifies nodes to play the role of locators based on the likelihood of a destination to be close to these nodes- i.e. , locators are identified depending on the mobility pattern of nodes . Otiy relies on the cyclic mobility patterns of nodes and creates a slotted agenda composed of a set of predicted locations , defined according to the past and present patterns of mobility . Correspondent nodes fetch this agenda only once and use it as a reference for identifying which locators are responsible for the node at different points in time . Over a period of about one year , the weekly proportion of nodes having at least 50 % of exact location predictions is in average about 75 % . This proportion increases by 10 % when nodes also consider their closeness to the locator from only what they know about the network .
0709.2346	cs.IT cs.CC math.IT	Pushdown Compression	The pressing need for eficient compression schemes for XML documents has recently been focused on stack computation [ 6 , 9 ] , and in particular calls for a formulation of information-lossless stack or pushdown compressors that allows a formal analysis of their performance and a more ambitious use of the stack in XML compression , where so far it is mainly connected to parsing mechanisms . In this paper we introduce the model of pushdown compressor , based on pushdown transducers that compute a single injective function while keeping the widest generality regarding stack computation . The celebrated Lempel-Ziv algorithm LZ78 [ 10 ] was introduced as a general purpose compression algorithm that outperforms finite-state compressors on all sequences . We compare the performance of the Lempel-Ziv algorithm with that of the pushdown compressors , or compression algorithms that can be implemented with a pushdown transducer . This comparison is made without any a priori assumption on the data 's source and considering the asymptotic compression ratio for infinite sequences . We prove that Lempel-Ziv is incomparable with pushdown compressors .
0709.2401	cs.CL	Bootstrapping Deep Lexical Resources : Resources for Courses	We propose a range of deep lexical acquisition methods which make use of morphological , syntactic and ontological language resources to model word similarity and bootstrap from a seed lexicon . The different methods are deployed in learning lexical items for a precision grammar , and shown to each have strengths and weaknesses over different word classes . A particular focus of this paper is the relative accessibility of different language resource types , and predicted `` bang for the buck '' associated with each in deep lexical acquisition applications .
