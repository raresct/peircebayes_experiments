0710.1404	cs.DB cs.IR	Performance Comparison of Persistence Frameworks	One of the essential and most complex components in the software development process is the database . The complexity increases when the `` orientation '' of the interacting components differs . A persistence framework moves the program data in its most natural form to and from a permanent data store , the database . Thus a persistence framework manages the database and the mapping between the database and the objects . This paper compares the performance of two persistence frameworks ? Hibernate and iBatis ? s SQLMaps using a banking database . The performance of both of these tools in single and multi-user environments are evaluated .
0710.1435	cs.DS	Faster Least Squares Approximation	Least squares approximation is a technique to find an approximate solution to a system of linear equations that has no exact solution . In a typical setting , one lets $ n $ be the number of constraints and $ d $ be the number of variables , with $ n \gg d $ . Then , existing exact methods find a solution vector in $ O ( nd^2 ) $ time . We present two randomized algorithms that provide very accurate relative-error approximations to the optimal value and the solution vector of a least squares approximation problem more rapidly than existing exact algorithms . Both of our algorithms preprocess the data with the Randomized Hadamard Transform . One then uniformly randomly samples constraints and solves the smaller problem on those constraints , and the other performs a sparse random projection and solves the smaller problem on those projected coordinates . In both cases , solving the smaller problem provides relative-error approximations , and , if $ n $ is sufficiently larger than $ d $ , the approximate solution can be computed in $ O ( nd \log d ) $ time .
0710.1436	cs.DC hep-ex	Polish grid infrastructure for science and research	Structure , functionality , parameters and organization of the computing Grid in Poland is described , mainly from the perspective of high-energy particle physics community , currently its largest consumer and developer . It represents distributed Tier-2 in the worldwide Grid infrastructure . It also provides services and resources for data-intensive applications in other sciences .
0710.1455	cs.DC cs.PF	Superrecursive Features of Interactive Computation	Functioning and interaction of distributed devices and concurrent algorithms are analyzed in the context of the theory of algorithms . Our main concern here is how and under what conditions algorithmic interactive devices can be more powerful than the recursive models of computation , such as Turing machines . Realization of such a higher computing power makes these systems superrecursive . We find here five sources for superrecursiveness in interaction . In addition , we prove that when all of these sources are excluded , the algorithmic interactive system in question is able to perform only recursive computations . These results provide computer scientists with necessary and sufficient conditions for achieving superrecursiveness by algorithmic interactive devices .
