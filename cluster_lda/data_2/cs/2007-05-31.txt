0705.4566	cs.AI cs.LG	Loop corrections for message passing algorithms in continuous variable models	In this paper we derive the equations for Loop Corrected Belief Propagation on a continuous variable Gaussian model . Using the exactness of the averages for belief propagation for Gaussian models , a different way of obtaining the covariances is found , based on Belief Propagation on cavity graphs . We discuss the relation of this loop correction algorithm to Expectation Propagation algorithms for the case in which the model is no longer Gaussian , but slightly perturbed by nonlinear terms .
0705.4584	cs.CY cs.AI cs.MA	Modeling Epidemic Spread in Synthetic Populations - Virtual Plagues in Massively Multiplayer Online Games	A virtual plague is a process in which a behavior-affecting property spreads among characters in a Massively Multiplayer Online Game ( MMOG ) . The MMOG individuals constitute a synthetic population , and the game can be seen as a form of interactive executable model for studying disease spread , albeit of a very special kind . To a game developer maintaining an MMOG , recognizing , monitoring , and ultimately controlling a virtual plague is important , regardless of how it was initiated . The prospect of using tools , methods and theory from the field of epidemiology to do this seems natural and appealing . We will address the feasibility of such a prospect , first by considering some basic measures used in epidemiology , then by pointing out the differences between real world epidemics and virtual plagues . We also suggest directions for MMOG developer control through epidemiological modeling . Our aim is understanding the properties of virtual plagues , rather than trying to eliminate them or mitigate their effects , as would be in the case of real infectious disease .
0705.4604	cs.LO	Temporal Runtime Verification using Monadic Difference Logic	In this paper we present an algorithm for performing runtime verification of a bounded temporal logic over timed runs . The algorithm consists of three elements . First , the bounded temporal formula to be verified is translated into a monadic first-order logic over difference inequalities , which we call monadic difference logic . Second , at each step of the timed run , the monadic difference formula is modified by computing a quotient with the state and time of that step . Third , the resulting formula is checked for being a tautology or being unsatisfiable by a decision procedure for monadic difference logic . We further provide a simple decision procedure for monadic difference logic based on the data structure Difference Decision Diagrams . The algorithm is complete in a very strong sense on a subclass of temporal formulae characterized as homogeneously monadic and it is approximate on other formulae . The approximation comes from the fact that not all unsatisfiable or tautological formulae are recognised at the earliest possible time of the runtime verification . Contrary to existing approaches , the presented algorithms do not work by syntactic rewriting but employ efficient decision structures which make them applicable in real applications within for instance business software .
0705.4606	cs.IR cs.DS	Dynamic User-Defined Similarity Searching in Semi-Structured Text Retrieval	Modern text retrieval systems often provide a similarity search utility , that allows the user to find efficiently a fixed number k of documents in the data set that are most similar to a given query ( here a query is either a simple sequence of keywords or the identifier of a full document found in previous searches that is considered of interest ) . We consider the case of a textual database made of semi-structured documents . Each field , in turns , is modelled with a specific vector space . The problem is more complex when we also allow each such vector space to have an associated user-defined dynamic weight that influences its contribution to the overall dynamic aggregated and weighted similarity . This dynamic problem has been tackled in a recent paper by Singitham et al . in in VLDB 2004 . Their proposed solution , which we take as baseline , is a variant of the cluster-pruning technique that has the potential for scaling to very large corpora of documents , and is far more efficient than the naive exhaustive search . We devise an alternative way of embedding weights in the data structure , coupled with a non-trivial application of a clustering algorithm based on the furthest point first heuristic for the metric k-center problem . The validity of our approach is demonstrated experimentally by showing significant performance improvements over the scheme proposed in Singitham et al . in VLDB 2004 . We improve significantly tradeoffs between query time and output quality with respect to the baseline method in Singitham et al . in in VLDB 2004 , and also with respect to a novel method by Chierichetti et al . to appear in ACM PODS 2007 . We also speed up the pre-processing time by a factor at least thirty .
0705.4618	cs.DS cs.CG cs.LO	An Improved Tight Closure Algorithm for Integer Octagonal Constraints	Integer octagonal constraints ( a.k.a . `` Unit Two Variables Per Inequality '' or `` UTVPI integer constraints '' ) constitute an interesting class of constraints for the representation and solution of integer problems in the fields of constraint programming and formal analysis and verification of software and hardware systems , since they couple algorithms having polynomial complexity with a relatively good expressive power . The main algorithms required for the manipulation of such constraints are the satisfiability check and the computation of the inferential closure of a set of constraints . The latter is called `tight ' closure to mark the difference with the ( incomplete ) closure algorithm that does not exploit the integrality of the variables . In this paper we present and fully justify an O ( n^3 ) algorithm to compute the tight closure of a set of UTVPI integer constraints .
0705.4654	cs.SD cs.CV	Local Area Damage Detection in Composite Structures Using Piezoelectric Transducers	An integrated and automated smart structures approach for structural health monitoring is presented , utilizing an array of piezoelectric transducers attached to or embedded within the structure for both actuation and sensing . The system actively interrogates the structure via broadband excitation of multiple actuators across a desired frequency range . The structure 's vibration signature is then characterized by computing the transfer functions between each actuator/sensor pair , and compared to the baseline signature . Experimental results applying the system to local area damage detection in a MD Explorer rotorcraft composite flexbeam are presented .
0705.4658	cs.IT cs.CC math.IT	Two sources are better than one for increasing the Kolmogorov complexity of infinite sequences	The randomness rate of an infinite binary sequence is characterized by the sequence of ratios between the Kolmogorov complexity and the length of the initial segments of the sequence . It is known that there is no uniform effective procedure that transforms one input sequence into another sequence with higher randomness rate . By contrast , we display such a uniform effective procedure having as input two independent sequences with positive but arbitrarily small constant randomness rate . Moreover the transformation is a truth-table reduction and the output has randomness rate arbitrarily close to 1 .
0705.4673	cs.DS cs.DM	A randomized algorithm for the on-line weighted bipartite matching problem	We study the on-line minimum weighted bipartite matching problem in arbitrary metric spaces . Here , $ n $ not necessary disjoint points of a metric space $ M $ are given , and are to be matched on-line with $ n $ points of $ M $ revealed one by one . The cost of a matching is the sum of the distances of the matched points , and the goal is to find or approximate its minimum . The competitive ratio of the deterministic problem is known to be $ \Theta ( n ) $ . It was conjectured that a randomized algorithm may perform better against an oblivious adversary , namely with an expected competitive ratio $ \Theta ( \log n ) $ . We prove a slightly weaker result by showing a $ o ( \log^3 n ) $ upper bound on the expected competitive ratio . As an application the same upper bound holds for the notoriously hard fire station problem , where $ M $ is the real line .
0705.4676	cs.DB cs.CL	Recursive n-gram hashing is pairwise independent , at best	Many applications use sequences of n consecutive symbols ( n-grams ) . Hashing these n-grams can be a performance bottleneck . For more speed , recursive hash families compute hash values by updating previous values . We prove that recursive hash families can not be more than pairwise independent . While hashing by irreducible polynomials is pairwise independent , our implementations either run in time O ( n ) or use an exponential amount of memory . As a more scalable alternative , we make hashing by cyclic polynomials pairwise independent by ignoring n-1 bits . Experimentally , we show that hashing by cyclic polynomials is is twice as fast as hashing by irreducible polynomials . We also show that randomized Karp-Rabin hash families are not pairwise independent .
0706.0014	cs.SC	Towards an exact adaptive algorithm for the determinant of a rational matrix	In this paper we propose several strategies for the exact computation of the determinant of a rational matrix . First , we use the Chinese Remaindering Theorem and the rational reconstruction to recover the rational determinant from its modular images . Then we show a preconditioning for the determinant which allows us to skip the rational reconstruction process and reconstruct an integer result . We compare those approaches with matrix preconditioning which allow us to treat integer instead of rational matrices . This allows us to introduce integer determinant algorithms to the rational determinant problem . In particular , we discuss the applicability of the adaptive determinant algorithm of [ 9 ] and compare it with the integer Chinese Remaindering scheme . We present an analysis of the complexity of the strategies and evaluate their experimental performance on numerous examples . This experience allows us to develop an adaptive strategy which would choose the best solution at the run time , depending on matrix properties . All strategies have been implemented in LinBox linear algebra library .
0706.0022	cs.AI cs.GL	Modeling Computations in a Semantic Network	Semantic network research has seen a resurgence from its early history in the cognitive sciences with the inception of the Semantic Web initiative . The Semantic Web effort has brought forth an array of technologies that support the encoding , storage , and querying of the semantic network data structure at the world stage . Currently , the popular conception of the Semantic Web is that of a data modeling medium where real and conceptual entities are related in semantically meaningful ways . However , new models have emerged that explicitly encode procedural information within the semantic network substrate . With these new technologies , the Semantic Web has evolved from a data modeling medium to a computational medium . This article provides a classification of existing computational modeling efforts and the requirements of supporting technologies that will aid in the further growth of this burgeoning domain .
0706.0046	cs.DS	Symmetry Partition Sort	In this paper , we propose a useful replacement for quicksort-style utility functions . The replacement is called Symmetry Partition Sort , which has essentially the same principle as Proportion Extend Sort . The maximal difference between them is that the new algorithm always places already partially sorted inputs ( used as a basis for the proportional extension ) on both ends when entering the partition routine . This is advantageous to speeding up the partition routine . The library function based on the new algorithm is more attractive than Psort which is a library function introduced in 2004 . Its implementation mechanism is simple . The source code is clearer . The speed is faster , with O ( n log n ) performance guarantee . Both the robustness and adaptivity are better . As a library function , it is competitive .
